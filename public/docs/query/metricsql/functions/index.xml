<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>函数 on 中文手册(WIP)</title>
    <link>http://localhost:1313/docs/query/metricsql/functions/</link>
    <description>Recent content in 函数 on 中文手册(WIP)</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <atom:link href="http://localhost:1313/docs/query/metricsql/functions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>汇总（Rollup）</title>
      <link>http://localhost:1313/docs/query/metricsql/functions/rollup/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/query/metricsql/functions/rollup/</guid>
      <description>&lt;h2 id=&#34;什么是rollup&#34;&gt;什么是Rollup&lt;/h2&gt;&#xA;&lt;p&gt;Rollup函数（也称为范围函数或窗口函数）在所选 timeseries 的给定回溯窗口上对原始样本的汇总计算。例如，&lt;code&gt;avg_over_time(temperature[24h])&lt;/code&gt;计算过去 24 小时内所有原始样本的平均温度值。&lt;/p&gt;&#xA;&lt;p&gt;更多细节：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;如果在Grafana中使用&lt;code&gt;rollup&lt;/code&gt;函数来构建图形，那么每个点上的&lt;code&gt;rollup&lt;/code&gt;都是独立计算的。例如，&lt;code&gt;avg_over_time(temperature[24h])&lt;/code&gt;图表中的每个点显示了截止到该时间点的过去24小时内的平均温度。点之间的间隔由Grafana传递给&lt;code&gt;/api/v1/query_range&lt;/code&gt;接口作为&lt;code&gt;step&lt;/code&gt;查询参数设置。&lt;/li&gt;&#xA;&lt;li&gt;如果给定的查询语句返回多个 timeseries，则每个返回的序列都会单独计算汇总。&lt;/li&gt;&#xA;&lt;li&gt;如果方括号中的回溯窗口缺失，则MetricsQL会自动将回溯窗口设置为图表上点之间的间隔（即&lt;code&gt;/api/v1/query_range&lt;/code&gt;中的&lt;code&gt;step&lt;/code&gt;查询参数，Grafana中的&lt;code&gt;$__interval&lt;/code&gt;值或MetricsQL中的&lt;code&gt;1i&lt;/code&gt;持续时间）。例如，&lt;code&gt;rate(http_requests_total)&lt;/code&gt;在Grafana中等同于&lt;code&gt;rate(http_requests_total[$__interval])&lt;/code&gt;。它也等同于&lt;code&gt;rate(http_requests_total[1i])&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;每个在MetricsQL中的系列选择器都必须包装在一个rollup函数中。否则，它会自动被包装成&lt;code&gt;default_rollup&lt;/code&gt;。例如，&lt;code&gt;foo{bar=&amp;quot;baz&amp;quot;}&lt;/code&gt; 在执行计算之前会自动转换为 &lt;code&gt;default_rollup(foo{bar=&amp;quot;baz&amp;quot;}[1i])&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;li&gt;如果在rollup函数中传递的参数不是series selector，那么内部的参数会自动转换为&lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/shu-ju-cha-xun/metricql/zi-cha-xun&#34;&gt;子查询&lt;/a&gt;。&lt;/li&gt;&#xA;&lt;li&gt;所有的汇总函数都接受可选的 &lt;code&gt;keep_metric_names&lt;/code&gt; 修饰符。如果设置了该修饰符，函数将在结果中保留指标名称。请参阅&lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html#keep_metric_names&#34;&gt;这些文档&lt;/a&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;更多参见&lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html#implicit-query-conversions&#34;&gt;隐式查询转换&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;与-prometheus-的普遍差异&#34;&gt;与 Prometheus 的普遍差异&lt;/h2&gt;&#xA;&lt;p&gt;凡是涉及对回溯窗口样本值首尾样本值进行计算的 rollup 函数，比如 &lt;code&gt;rate&lt;/code&gt;、&lt;code&gt;delta&lt;/code&gt;、&lt;code&gt;increase&lt;/code&gt; 等函数；其MetricsQL 和 PromQL 都存在统一的计算差异。因此 VictoriaMetrics 使用 &lt;code&gt;xxx_prometheus&lt;/code&gt; 的命名提供了兼容 Prometheus 统计方式的 rollup 函数，如 &lt;code&gt;rate_prometheus&lt;/code&gt;、&lt;code&gt;delta_prometheus&lt;/code&gt;、&lt;code&gt;increase_prometheus&lt;/code&gt; 等。而默认则使用 MetricsQL 的统计方式。&lt;/p&gt;&#xA;&lt;p&gt;具体的差异细节请阅读&lt;a href=&#34;https://www.yuque.com/icloudfly/xs51ky/qwvgrmtpg77a33a7&#34;&gt;这篇文档&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;函数列表&#34;&gt;函数列表&lt;/h2&gt;&#xA;&lt;h3 id=&#34;absent_over_time&#34;&gt;absent_over_time&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;absent_over_time(series_selector[d])&lt;/code&gt;是一个 rollup 函数，如果给定的向前窗口&lt;code&gt;d&lt;/code&gt;不包含原始样本，则返回1。否则，它将返回一个空结果。&lt;/p&gt;&#xA;&lt;p&gt;这个函数在PromQL中得到支持。另请参阅&lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html#present_over_time&#34;&gt;present_over_time&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;aggr_over_time&#34;&gt;aggr_over_time&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;aggr_over_time((&amp;quot;rollup_func1&amp;quot;, &amp;quot;rollup_func2&amp;quot;, ...), series_selector[d])&lt;/code&gt; 计算给定回溯窗口 &lt;code&gt;d&lt;/code&gt; 上所有列出的 &lt;code&gt;rollup_func* &lt;/code&gt;对原始样本进行汇总。根据给定的series_selector，对每个返回的时间序列进行单独计算。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;rollup_func*&lt;/code&gt; 可以是任意一个 rollup 函数。比如，&lt;code&gt;aggr_over_time((&amp;quot;min_over_time&amp;quot;, &amp;quot;max_over_time&amp;quot;, &amp;quot;rate&amp;quot;), m[d])&lt;/code&gt; 就会对&lt;code&gt;m[d]&lt;/code&gt;计算 &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html#min_over_time&#34;&gt;min_over_time&lt;/a&gt;, &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html#max_over_time&#34;&gt;max_over_time&lt;/a&gt; 和 &lt;a href=&#34;https://docs.victoriametrics.com/MetricsQL.html#rate&#34;&gt;rate&lt;/a&gt; 。&lt;/p&gt;&#xA;&lt;h3 id=&#34;ascent_over_time&#34;&gt;ascent_over_time&lt;/h3&gt;&#xA;&lt;p&gt;&lt;code&gt;ascent_over_time(series_selector[d])&lt;/code&gt; 计算给定时间窗口d上原始样本值的上升。针对&lt;a href=&#34;https://docs.victoriametrics.com/keyConcepts.html#filtering&#34;&gt;series_selector&lt;/a&gt;查询返回的每个时间序列单独执行计算。&lt;/p&gt;</description>
    </item>
    <item>
      <title>操作 Label</title>
      <link>http://localhost:1313/docs/query/metricsql/functions/label/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/query/metricsql/functions/label/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Label 操作函数对选定的 Rollup 计算结果进行 Label 转换。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;附加细节：&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;!-- raw HTML omitted --&gt;如果 Label 操作函数直接应用于&lt;!-- raw HTML omitted --&gt;&lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(34, 34, 34);&amp;quot;&amp;gt;series_selector&amp;lt;/font&amp;gt;&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;，那么在执行 Label 转换之前，会自动应用&lt;!-- raw HTML omitted --&gt;&lt;code&gt;[default_rollup](https://docs.victoriametrics.com/metricsql/#default_rollup)&amp;lt;font style=&amp;quot;color:rgb(34, 34, 34);&amp;quot;&amp;gt;()&amp;lt;/font&amp;gt;&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;函数。例如，&lt;!-- raw HTML omitted --&gt;&lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(34, 34, 34);&amp;quot;&amp;gt;alias(temperature, &amp;quot;foo&amp;quot;)&amp;lt;/font&amp;gt;&lt;/code&gt;&lt;!-- raw HTML omitted --&gt; 会被隐式转换为 &lt;!-- raw HTML omitted --&gt;&lt;code&gt;&amp;lt;font style=&amp;quot;color:rgb(34, 34, 34);&amp;quot;&amp;gt;alias(default_rollup(temperature), &amp;quot;foo&amp;quot;)&amp;lt;/font&amp;gt;&lt;/code&gt;&lt;!-- raw HTML omitted --&gt;。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;!-- raw HTML omitted --&gt;请参阅&lt;!-- raw HTML omitted --&gt;[隐式查询转换](implicit query conversions)&lt;!-- raw HTML omitted --&gt;。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>聚合统计</title>
      <link>http://localhost:1313/docs/query/metricsql/functions/aggregation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/query/metricsql/functions/aggregation/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Aggregate functions&lt;/strong&gt; calculate aggregates over groups of &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#rollup-functions&#34;&gt;rollup results&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Additional details:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;By default, a single group is used for aggregation. Multiple independent groups can be set up by specifying grouping labels in &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;without&lt;/code&gt; modifiers. For example, &lt;code&gt;count(up) by (job)&lt;/code&gt; would group &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#rollup-functions&#34;&gt;rollup results&lt;/a&gt; by &lt;code&gt;job&lt;/code&gt; label value and calculate the &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#count&#34;&gt;count&lt;/a&gt; aggregate function independently per each group, while &lt;code&gt;count(up) without (instance)&lt;/code&gt; would group &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#rollup-functions&#34;&gt;rollup results&lt;/a&gt; by all the labels except &lt;code&gt;instance&lt;/code&gt; before calculating &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#count&#34;&gt;count&lt;/a&gt; aggregate function independently per each group. Multiple labels can be put in &lt;code&gt;by&lt;/code&gt; and &lt;code&gt;without&lt;/code&gt; modifiers.&lt;/li&gt;&#xA;&lt;li&gt;If the aggregate function is applied directly to a &lt;a href=&#34;https://docs.victoriametrics.com/keyconcepts/#filtering&#34;&gt;series_selector&lt;/a&gt;, then the &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#default_rollup&#34;&gt;default_rollup()&lt;/a&gt; function is automatically applied before calculating the aggregate. For example, &lt;code&gt;count(up)&lt;/code&gt; is implicitly transformed to &lt;code&gt;count(default_rollup(up))&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Aggregate functions accept arbitrary number of args. For example, &lt;code&gt;avg(q1, q2, q3)&lt;/code&gt; would return the average values for every point across time series returned by &lt;code&gt;q1&lt;/code&gt;, &lt;code&gt;q2&lt;/code&gt; and &lt;code&gt;q3&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Aggregate functions support optional &lt;code&gt;limit N&lt;/code&gt; suffix, which can be used for limiting the number of output groups. For example, &lt;code&gt;sum(x) by (y) limit 3&lt;/code&gt; limits the number of groups for the aggregation to 3. All the other groups are ignored.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;See also &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#implicit-query-conversions&#34;&gt;implicit query conversions&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>数值转换</title>
      <link>http://localhost:1313/docs/query/metricsql/functions/transmit/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/query/metricsql/functions/transmit/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Transform functions&lt;/strong&gt; calculate transformations over &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#rollup-functions&#34;&gt;rollup results&lt;/a&gt;. For example, &lt;code&gt;abs(delta(temperature[24h]))&lt;/code&gt; calculates the absolute value for every point of every time series returned from the rollup &lt;code&gt;delta(temperature[24h])&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Additional details:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If transform function is applied directly to a &lt;a href=&#34;https://docs.victoriametrics.com/keyconcepts/#filtering&#34;&gt;series selector&lt;/a&gt;, then the &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#default_rollup&#34;&gt;default_rollup()&lt;/a&gt; function is automatically applied before calculating the transformations. For example, &lt;code&gt;abs(temperature)&lt;/code&gt; is implicitly transformed to &lt;code&gt;abs(default_rollup(temperature))&lt;/code&gt;.&lt;/li&gt;&#xA;&lt;li&gt;All the transform functions accept optional &lt;code&gt;keep_metric_names&lt;/code&gt; modifier. If it is set, then the function doesn’t drop metric names from the resulting time series. See &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#keep_metric_names&#34;&gt;these docs&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;See also &lt;a href=&#34;https://docs.victoriametrics.com/metricsql/#implicit-query-conversions&#34;&gt;implicit query conversions&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
