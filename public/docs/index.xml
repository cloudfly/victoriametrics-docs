<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VictoriaMetrics 中文手册 on 中文手册(WIP)</title>
    <link>http://localhost:1313/docs/</link>
    <description>Recent content in VictoriaMetrics 中文手册 on 中文手册(WIP)</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/docs/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>核心概念</title>
      <link>http://localhost:1313/docs/concepts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/concepts/</guid>
      <description>&lt;p&gt;本文主要阐述一些词汇概念的基本定义，如果你对这些基本概念或词汇没有基本的了解，对本书中的大部分内容的理解上都会有一些困难。&lt;/p&gt;&#xA;&lt;p&gt;有一些专业英文词汇是不翻译的，比如 Metric、Labels、TimeSeries 等，因为这些专业属于很频繁，强行寻找一个对应的中文词汇反而会增加理解成本。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是-metric度量指标&#34;&gt;什么是 Metric（度量指标）&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;不翻译&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;简单来说，&lt;code&gt;metric&lt;/code&gt;是对事物的数值测量或观察。&lt;/p&gt;&#xA;&lt;p&gt;Metric 最常见的用途包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;检查系统在特定时间段内的行为；&lt;/li&gt;&#xA;&lt;li&gt;将行为变化与其他测量结果相关联；&lt;/li&gt;&#xA;&lt;li&gt;观察或预测趋势；&lt;/li&gt;&#xA;&lt;li&gt;如果度量标准超过阈值，则触发事件（告警）。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;metric-结构&#34;&gt;Metric 结构&lt;/h2&gt;&#xA;&lt;p&gt;让我们从一个例子开始。为了追踪我们的应用程序处理了多少请求，我们将定义一个名为&lt;code&gt;requests_total&lt;/code&gt;的指标。&lt;/p&gt;&#xA;&lt;p&gt;在这里你可以更具体一些，比如说&lt;code&gt;requests_success_total&lt;/code&gt;（仅针对成功的请求）或者&lt;code&gt;request_errors_total&lt;/code&gt;（针对失败的请求）。&lt;/p&gt;&#xA;&lt;p&gt;选择一个指标名称非常重要，它应该能够清楚地向每个看到它的人传达正确信息：实际测量到了什么内容；就像编程中的变量名一样。在其他的 tsdb 中，也有使用 &lt;strong&gt;measurement&lt;/strong&gt; 这个单词的，其表达的核心内容是一样的。&lt;/p&gt;&#xA;&lt;h2 id=&#34;labels标签&#34;&gt;Labels（标签）&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;不翻译&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;每个指标都可以包含额外的元信息，以 Label 对的形式呈现：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;requests_total&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;path=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; code=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;requests_total&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;path=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; code=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;403&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;指标元信息，即一组用花括号括起来的键值对，为我们提供了&lt;code&gt;request&lt;/code&gt;被处理的&lt;code&gt;path&lt;/code&gt;和&lt;code&gt;status code&lt;/code&gt;的上下文。Label 的值始终是&lt;code&gt;string&lt;/code&gt;类型。VictoriaMetrics数据模型是无模式的（No Scheme），即没有预先定义的表结构，用户不需要预先定义指标名称或其标签，而是可以随时添加或更改已采用的指标。&lt;/p&gt;&#xA;&lt;p&gt;实际上，指标名称也是一个具有特殊名称&lt;code&gt;__name__&lt;/code&gt;的 Label。因此，以下两个系列是相同的：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;requests_total&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;path=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; code=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;__name__=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;requests_total&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; path=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; code=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Labels可以自动附加到通过vmagent或Prometheus采集的 &lt;a href=&#34;#zZt47&#34;&gt;timeseries&lt;/a&gt; 上。VictoriaMetrics支持对查询API强制执行 Label 过滤器以实现数据的软隔离。然而，真正的数据隔离可以通过&lt;a href=&#34;#S6Dpt&#34;&gt;多租户&lt;/a&gt;实现。&lt;/p&gt;&#xA;&lt;h2 id=&#34;timeseries时间序列&#34;&gt;Timeseries（时间序列）&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;不翻译&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;一个指标名称和其 Label 的组合定义了一个 timeseries。例如，&lt;code&gt;requests_total{path=&amp;quot;/&amp;quot;, code=&amp;quot;200&amp;quot;}&lt;/code&gt; 和&lt;code&gt; requests_total{path=&amp;quot;/&amp;quot;, code=&amp;quot;403&amp;quot;}&lt;/code&gt; 是两个不同的 timeseries，因为它们在&lt;code&gt;code&lt;/code&gt;标签上有不同的值。&lt;/p&gt;&#xA;&lt;p&gt;唯一时间序列的数量对数据库资源用量产生影响。详细信息请参阅&lt;a href=&#34;https://www.yuque.com/icloudfly/xs51ky/dh8a9omrcvlana4n#what-is-an-active-time-series&#34;&gt;什么是活跃时间序列&lt;/a&gt;以及&lt;a href=&#34;https://www.yuque.com/icloudfly/xs51ky/dh8a9omrcvlana4n#gao-liu-shilshi-zhi-shen-me&#34;&gt;什么是高流失率&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;cardinality基数&#34;&gt;Cardinality（基数）&lt;/h2&gt;&#xA;&lt;p&gt;唯一时间序列的数量被称为基数。过多的唯一时间序列被称为&lt;a href=&#34;https://www.yuque.com/icloudfly/xs51ky/dh8a9omrcvlana4n#shen-me-shi-gao-ji-shu&#34;&gt;高基数&lt;/a&gt;。高基数可能导致在VictoriaMetrics中增加资源使用量。请参阅&lt;a href=&#34;https://www.yuque.com/icloudfly/xs51ky/dh8a9omrcvlana4n#shen-me-shi-gao-ji-shu&#34;&gt;这篇文档&lt;/a&gt;以获取更多详细信息。&lt;/p&gt;&#xA;&lt;h2 id=&#34;raw-samples原始样本&#34;&gt;Raw samples（原始样本）&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;不翻译&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;每个唯一的时间序列可以由任意数量的&lt;code&gt;（value，timestamp）&lt;/code&gt;数据点（也称为&lt;code&gt;原始样本&lt;/code&gt;）组成，它们按照&lt;code&gt;timestamp&lt;/code&gt;排序。&lt;code&gt;value&lt;/code&gt;是&lt;a href=&#34;https://en.wikipedia.org/wiki/Double-precision_floating-point_format&#34;&gt;双精度浮点数&lt;/a&gt;。&lt;code&gt;timestamp&lt;/code&gt;是具有毫秒精度的 &lt;a href=&#34;https://en.wikipedia.org/wiki/Unix_time&#34;&gt;Unix 时间戳&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;以下是一个&lt;a href=&#34;https://github.com/prometheus/docs/blob/main/content/docs/instrumenting/exposition_formats.md#text-based-format&#34;&gt;Prometheus文本格式&lt;/a&gt;的单个原始样本的示例：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;requests_total&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;{&lt;/span&gt;path=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; code=&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;200&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;123&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4567890&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;requests_total{path=&amp;quot;/&amp;quot;, code=&amp;quot;200&amp;quot;}&lt;/code&gt; 用于标识给定样本的相关 timeseries。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;123&lt;/code&gt; 是一个样本值。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;4567890&lt;/code&gt; 是可选的样本时间戳。如果缺失，则数据被存储到VictoriaMetrics中时使用数据库的当前时间戳。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;timeseries-resolution时间序列粒度&#34;&gt;Timeseries resolution（时间序列粒度）&lt;/h2&gt;&#xA;&lt;p&gt;分辨率是 &lt;a href=&#34;#zZt47&#34;&gt;timeseries&lt;/a&gt; 的 &lt;a href=&#34;#WZ9Ad&#34;&gt;samples&lt;/a&gt; 之间的最小间隔。考虑以下示例：&lt;/p&gt;</description>
    </item>
    <item>
      <title>快速开始</title>
      <link>http://localhost:1313/docs/quickstart/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/quickstart/</guid>
      <description>&lt;h2 id=&#34;如何安装&#34;&gt;如何安装&lt;/h2&gt;&#xA;&lt;p&gt;VictoriaMetrics 有 2 种发布形式：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/icloudfly/xs51ky/nusk0evr8ycpcu1t&#34;&gt;单机版本&lt;/a&gt; - ALL-IN-ONE 的二进制形式，非常易于使用和维护。可完美地垂直扩展，并且轻松处理百万级的QPS写入。&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.yuque.com/icloudfly/xs51ky/viy5b75mqwwrdic1&#34;&gt;集群版本&lt;/a&gt; - 一套组件，可用于构建水平可扩展集群。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;单机版的 VictoriaMetrics 有以下几种提供方式：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://aws.amazon.com/marketplace/pp/prodview-4tbfq5icmbmyc&#34;&gt;Managed VictoriaMetrics at AWS&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/r/victoriametrics/victoria-metrics/&#34;&gt;Docker&lt;/a&gt; 镜像&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://snapcraft.io/victoriametrics&#34;&gt;Snap packages&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/helm-charts#list-of-charts&#34;&gt;Helm Charts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;二进制&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics&#34;&gt;源代码&lt;/a&gt;。 参见&lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/dan-ji-ban-ben#how-to-build-from-sources&#34;&gt;如何构建源代码&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://www.linode.com/marketplace/apps/victoriametrics/victoriametrics/&#34;&gt;VictoriaMetrics on Linode&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://marketplace.digitalocean.com/apps/victoriametrics-single&#34;&gt;VictoriaMetrics on DigitalOcean&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;只需要下载 VictoriaMetrics 然后跟随&lt;a href=&#34;https://www.yuque.com/icloudfly/xs51ky/nusk0evr8ycpcu1t#F6gyu&#34;&gt;这些步骤&lt;/a&gt;把 VictoriaMetrics 运行起来，然后再阅读 &lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/dan-ji-ban-ben#prometheus-setup&#34;&gt;Prometheus&lt;/a&gt; 和 &lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/dan-ji-ban-ben#grafana-setup&#34;&gt;Grafana 配置&lt;/a&gt;文档。&lt;/p&gt;&#xA;&lt;h3 id=&#34;使用-docker-启动单机版vm&#34;&gt;使用 Docker 启动单机版VM&lt;/h3&gt;&#xA;&lt;p&gt;使用下面的命令下载最新版本的 VictoriaMetrics Docker 镜像，然后使用 8482 端口运行，并将数据存储在当前目录中的 &lt;code&gt;victoria-metrics-data&lt;/code&gt; 目录下。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull victoriametrics/victoria-metrics:latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -it --rm -v &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;pwd&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/victoria-metrics-data:/victoria-metrics-data -p 8428:8428 victoriametrics/victoria-metrics:latest&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用浏览器打开 &lt;a href=&#34;http://localhost:8428/&#34;&gt;http://localhost:8428&lt;/a&gt; 然后阅读&lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/dan-ji-ban-ben#operation&#34;&gt;这些文档&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h3 id=&#34;使用-docker-启动集群版vm&#34;&gt;使用 Docker 启动集群版VM&lt;/h3&gt;&#xA;&lt;p&gt;下面的命令 clone 最新版本的 VictoriaMetrics 仓库，然后使用命令&lt;code&gt;make docker-cluster-up&lt;/code&gt;启动 Docker 容器。更多的自定义启动项可以通过编辑&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/blob/master/deployment/docker/docker-compose-cluster.yml&#34;&gt;docker-compose-cluster.yml&lt;/a&gt;实现。&lt;/p&gt;</description>
    </item>
    <item>
      <title>单机版本</title>
      <link>http://localhost:1313/docs/single/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/single/</guid>
      <description>&lt;h2 id=&#34;安装部署&#34;&gt;安装部署&lt;/h2&gt;&#xA;&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;&#xA;&lt;p&gt;要快速尝试VictoriaMetrics，只需下载&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;VictoriaMetrics可执行文件&lt;/a&gt;或&lt;a href=&#34;https://hub.docker.com/r/victoriametrics/victoria-metrics/&#34;&gt;Docker镜像&lt;/a&gt;，并使用所需的运行参数启动它。还可以参考&lt;a href=&#34;http://localhost:1313/docs/quickstart/&#34;&gt;快速开始&lt;/a&gt;指南获取更多信息。&lt;/p&gt;&#xA;&lt;p&gt;此外，也可以通过以下方法来安装VictoriaMetrics：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/helm-charts&#34;&gt;Helm charts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/operator&#34;&gt;Kubernetes operator&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/VictoriaMetrics/ansible-playbooks&#34;&gt;安装集群版本的 Ansible Role（官方）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/Slapper/ansible-victoriametrics-cluster-role&#34;&gt;安装集群版本的 Ansible Role（社区）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://github.com/dreamteam-gg/ansible-victoriametrics-role&#34;&gt;安装单机版的 Ansible Role（社区）&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://snapcraft.io/victoriametrics&#34;&gt;Snap package&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;运行&#34;&gt;运行&lt;/h3&gt;&#xA;&lt;p&gt;下面的几个运行参数是最常用的：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;-storageDataPath&lt;/code&gt;：VictoriaMetrics 把所有的数据都保存在这个目录。默认的路径是当前工作目录中的&lt;code&gt;victoria-metrics-data&lt;/code&gt; 子目录。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;-retentionPeriod&lt;/code&gt;：数据的保留时间。历史的数据会被自动清理删除。默认的保留时间是 1 个月。最小的保留时间是 1 天（即 24 小时）。&lt;a href=&#34;#deduplication&#34;&gt;点击了解更多详情&lt;/a&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;其他的运行参数，基本使用默认值就可以了，所以只有在有特殊需求的时候再修改他们就行。用&lt;code&gt;-help&lt;/code&gt; 参数看下&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#list-of-command-line-flags&#34;&gt;所有可用参数及他们描述和默认值&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;正因 VictoriaMetrics 的配置参数都是通过命令行传递的，所以它不支持动态修改配置。如果要修改配置就只能用新的命令行对 VictoriaMetrics 进行重启。步骤如下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;向VictoriaMetrics进程发送&lt;code&gt;SIGINT&lt;/code&gt;信号以正常停止它。请参阅&lt;a href=&#34;https://stackoverflow.com/questions/33239959/send-signal-to-process-from-command-line&#34;&gt;如何向进程发送信号&lt;/a&gt;。&lt;/li&gt;&#xA;&lt;li&gt;等待进程停止。这可能需要几秒钟时间。&lt;/li&gt;&#xA;&lt;li&gt;启动已升级的VictoriaMetrics。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;下面的几个文档，对初始化 VictoriaMetrics 可能会有些帮助：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/#how-to-scrape-prometheus-exporters-such-as-node-exporter&#34;&gt;How to set up scraping of Prometheus-compatible targets&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#how-to-import-time-series-data&#34;&gt;How to ingest data to VictoriaMetrics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/#prometheus-setup&#34;&gt;How to set up Prometheus to write data to VictoriaMetrics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#grafana-setup&#34;&gt;How to query VictoriaMetrics via Grafana&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#graphite-api-usage&#34;&gt;How to query VictoriaMetrics via Graphite API&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#alerting&#34;&gt;How to handle alerts&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;VictoriaMetrics 默认使用 8428 端口处理 &lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#prometheus-querying-api-usage&#34;&gt;Prometheus 查询请求&lt;/a&gt;。建议为 VictoriaMetrics 搭建&lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/dan-ji-ban-ben#jian-kong&#34;&gt;监控&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>集群版本</title>
      <link>http://localhost:1313/docs/cluster/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/cluster/</guid>
      <description>&lt;h2 id=&#34;架构概览&#34;&gt;架构概览&lt;/h2&gt;&#xA;&lt;p&gt;VictoriaMetrics 集群版本由以下几个服务组成：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;vmstorage&lt;/code&gt; - 存储原始数据，并返回在给定时间范围内针对给定 Label 筛选器查询的数据。&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;vminsert&lt;/code&gt; - 接受摄入的数据，并 根据对度量名称及其所有标签的一致散列，将数据分散到 &lt;code&gt;vmstorage&lt;/code&gt; 节点中&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;vmselect&lt;/code&gt; - 通过从所有已配置的 &lt;code&gt;vmstorage&lt;/code&gt; 节点获取所需数据来执行接收到的查询请求。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;每项服务都可独立扩展，并可在最合适的硬件上运行。 &lt;code&gt;vmstorage&lt;/code&gt; 节点之间互不相识，互不通信，也不共享任何数据。 这是一种&lt;a href=&#34;https://en.wikipedia.org/wiki/Shared-nothing_architecture&#34;&gt;共享无架构&lt;/a&gt; 。 它提高了集群的可用性，简化了集群维护和集群扩展。&lt;/p&gt;&#xA;&lt;h2 id=&#34;多租户&#34;&gt;多租户&lt;/h2&gt;&#xA;&lt;p&gt;VictoriaMetrics集群支持多个隔离的租户（即命名空间）。租户通过accountID或accountID:projectID进行标识，这些标识符被置于请求URL中。详情请参阅&lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#url-format&#34;&gt;这些文档&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;关于VictoriaMetrics中租户的一些事实：&lt;/p&gt;&#xA;&lt;p&gt;每个accountID和projectID均由一个任意的32位整数标识，范围为&lt;code&gt;[0..2^32)&lt;/code&gt;。如果projectID缺失，则自动分配为0。预期其他关于租户的信息，如身份验证令牌、租户名称、限制、会计等，存储在一个独立的关系数据库中。该数据库必须由位于VictoriaMetrics集群前端的独立服务进行管理，例如&lt;a href=&#34;https://docs.victoriametrics.com/vmauth.html&#34;&gt;vmauth&lt;/a&gt;或&lt;a href=&#34;https://docs.victoriametrics.com/vmgateway.html&#34;&gt;vmgateway&lt;/a&gt;。如果您需要此类服务的协助，请联系我们。&lt;/p&gt;&#xA;&lt;p&gt;当第一个数据点被写入给定的租户时，租户会被自动创建。&lt;/p&gt;&#xA;&lt;p&gt;所有租户的数据均匀分布在可用的&lt;code&gt;vmstorage&lt;/code&gt;节点之间。这保证了当不同租户拥有不同数量的数据和不同的查询负载时，&lt;code&gt;vmstorage&lt;/code&gt;节点之间的负载也是均匀的。&lt;/p&gt;&#xA;&lt;p&gt;数据库的性能和资源使用情况并不取决于租户的数量，而主要取决于所有租户中活跃时间序列的总数。如果一个时间序列在过去的一小时中至少接收了一个样本，或者在过去的一小时中被查询访问过，那么它就被认为是活跃的。&lt;/p&gt;&#xA;&lt;p&gt;VictoriaMetrics不支持在单一请求中查询多个租户。&lt;/p&gt;&#xA;&lt;p&gt;已注册租户的列表可以通过&lt;code&gt;http://&amp;lt;vmselect&amp;gt;:8481/admin/tenants&lt;/code&gt; URL获取。请参阅&lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#url-format&#34;&gt;这些文档&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;VictoriaMetrics通过指标公开了各种按租户划分的统计数据——请参阅&lt;a href=&#34;https://docs.victoriametrics.com/PerTenantStatistic.html&#34;&gt;这些文档&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;也可以看下&lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#multitenancy-via-labels&#34;&gt;通过 labels 实现多租户&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;h2 id=&#34;通过-labels-实现多租户&#34;&gt;通过 labels 实现多租户&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;vminsert&lt;/code&gt;可以从多个租户通过一个特殊的&lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#multitenancy&#34;&gt;多租户&lt;/a&gt;端点&lt;code&gt;http://vminsert:8480/insert/multitenant/&amp;lt;suffix&amp;gt;&lt;/code&gt;接收数据，其中可以替换为从此列表中获取数据的任何受支持的&lt;code&gt;&amp;lt;suffix&amp;gt;&lt;/code&gt;。在这种情况下，AccountID 和ProjectID是从传入样本的可选 &lt;code&gt;vm_account_id&lt;/code&gt; 和 &lt;code&gt;vm_project_id&lt;/code&gt; 标签中获取的。如果 vm_account_id 或 vm_project_id 标签缺失或无效，则相应的AccountID 或ProjectID 将设置为 0。在将样本转发到&lt;code&gt;vmstorage&lt;/code&gt;之前，会自动从样本中删除这些Label。例如，如果将以下样本写入 &lt;code&gt;http://vminsert:8480/insert/multitenant/prometheus/api/v1/write&lt;/code&gt;：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http_requests_total{path=&amp;#34;/foo&amp;#34;,vm_account_id=&amp;#34;42&amp;#34;} 12&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http_requests_total{path=&amp;#34;/bar&amp;#34;,vm_account_id=&amp;#34;7&amp;#34;,vm_project_id=&amp;#34;9&amp;#34;} 34&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后&lt;code&gt;http_requests_total｛path=“/foo”｝12&lt;/code&gt;将被存储在租户&lt;code&gt;accountID=42，projectID=0&lt;/code&gt;中，而&lt;code&gt;http_requests_total{path=“/bar”｝34&lt;/code&gt;将被存储到租户&lt;code&gt;accountID=7，projectID=9&lt;/code&gt;中。&lt;/p&gt;&#xA;&lt;p&gt;&lt;code&gt;vm_account_id&lt;/code&gt;和&lt;code&gt;vm_project_id&lt;/code&gt; labels 是在通过&lt;code&gt;-rebelConfig&lt;/code&gt;命令行标志应用 &lt;a href=&#34;https://docs.victoriametrics.com/relabeling.html&#34;&gt;relabeling&lt;/a&gt; 集后提取的，因此可以在此阶段设置这些 label。&lt;/p&gt;&#xA;&lt;p&gt;安全提示：建议将对多租户端点的访问限制为仅限可信源，因为不可信源可能会通过向任意租户写入不需要的样本来破坏每个租户的数据。&lt;/p&gt;&#xA;&lt;h2 id=&#34;二进制&#34;&gt;二进制&lt;/h2&gt;&#xA;&lt;p&gt;集群版本的编译二进制文件可在&lt;a href=&#34;https://github.com/VictoriaMetrics/VictoriaMetrics/releases&#34;&gt;发布页面&lt;/a&gt;的 assets 部分中找到。另请参阅包含单词“集群”的档案。&lt;/p&gt;</description>
    </item>
    <item>
      <title>数据写入</title>
      <link>http://localhost:1313/docs/write/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/write/</guid>
      <description>&lt;p&gt;VictoriaMetrics 支持当今监控应用的 2 种主流写入模式：Push 和 Pull。&lt;/p&gt;&#xA;&lt;h2 id=&#34;push-模型&#34;&gt;Push 模型&lt;/h2&gt;&#xA;&lt;p&gt;客户端定期以推送模式将收集到的指标数据发送给服务端：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;push-model.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;客户端（应用程序）决定何时何地发送其指标。VictoriaMetrics支持以下数据摄取协议（也称为推送协议）：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#prometheus-setup&#34;&gt;Prometheus remote write API&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#how-to-import-data-in-prometheus-exposition-format&#34;&gt;Prometheus text exposition format&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#how-to-send-data-from-datadog-agent&#34;&gt;DataDog protocol&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#how-to-send-data-from-influxdb-compatible-agents-such-as-telegraf&#34;&gt;InfluxDB line protocol&lt;/a&gt; over HTTP, TCP and UDP.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#how-to-send-data-from-graphite-compatible-agents-such-as-statsd&#34;&gt;Graphite plaintext protocol&lt;/a&gt; with &lt;a href=&#34;https://graphite.readthedocs.io/en/latest/tags.html#carbon&#34;&gt;tags&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#sending-data-via-telnet-put-protocol&#34;&gt;OpenTSDB put message&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#sending-opentsdb-data-via-http-apiput-requests&#34;&gt;HTTP OpenTSDB /api/put requests&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#how-to-import-data-in-json-line-format&#34;&gt;JSON line format&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Single-server-VictoriaMetrics.html#how-to-import-csv-data&#34;&gt;Arbitrary CSV data&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;所有协议都与VictoriaMetrics&lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/he-xin-gai-nian&#34;&gt;数据模型&lt;/a&gt;完全兼容，可以在生产环境中使用。我们建议使用&lt;a href=&#34;https://github.com/VictoriaMetrics/metrics&#34;&gt;github.com/VictoriaMetrics/metrics&lt;/a&gt;包将应用程序指标推送到VictoriaMetrics。还可以使用已经存在的与上述协议兼容的客户端，例如&lt;code&gt;Telegraf&lt;/code&gt;用的 InfluxDB line protocol。&lt;/p&gt;&#xA;&lt;p&gt;创建自定义客户端或为指标编写应用程序非常简单，只需发送一个POST请求即可：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -d &amp;#39;{&amp;#34;metric&amp;#34;:{&amp;#34;__name__&amp;#34;:&amp;#34;foo&amp;#34;,&amp;#34;job&amp;#34;:&amp;#34;node_exporter&amp;#34;},&amp;#34;values&amp;#34;:[0,1,2],&amp;#34;timestamps&amp;#34;:[1549891472010,1549891487724,1549891503438]}&amp;#39; -X POST &amp;#39;http://localhost:8428/api/v1/import&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;允许将指标推送/写入&lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/dan-ji-ban-ben&#34;&gt;单机版VictoriaMetrics&lt;/a&gt;、集群组件vminsert 和 &lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/xi-tong-zu-jian/vmagent&#34;&gt;vmagent&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;Push 模型的优点：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在VictoriaMetrics方面，配置更简单 - 无需为监控应用程序配置VictoriaMetrics的位置。不需要复杂的服务发现方案。&lt;/li&gt;&#xA;&lt;li&gt;安全设置更简单 - 无需设置从VictoriaMetrics到每个监控应用程序的访问权限。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;详细了解Percona为什么从 Pull 模式转向 Push 模式，请参阅 &lt;a href=&#34;https://www.percona.com/blog/2020/12/01/foiled-by-the-firewall-a-tale-of-transition-from-prometheus-to-victoriametrics/&#34;&gt;Foiled by the Firewall: A Tale of Transition From Prometheus to VictoriaMetrics&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>FAQ</title>
      <link>http://localhost:1313/docs/faq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/docs/faq/</guid>
      <description>&lt;h2 id=&#34;什么是活跃时间序列&#34;&gt;什么是活跃时间序列?&lt;/h2&gt;&#xA;&lt;p&gt;时间序列通过其名称和一组标签来唯一标识。例如，&lt;code&gt;temperature{city=&amp;quot;NY&amp;quot;,country=&amp;quot;US&amp;quot;}&lt;/code&gt; 和 &lt;code&gt;temperature{city=&amp;quot;SF&amp;quot;,country=&amp;quot;US&amp;quot;}&lt;/code&gt; 是两个不同的序列，因为它们在城市标签上有所区别。如果一个时间序列在最近一小时内至少接收到一个新样本，则被视为活跃。&lt;/p&gt;&#xA;&lt;h2 id=&#34;高流失率是指什么&#34;&gt;高流失率是指什么？&lt;/h2&gt;&#xA;&lt;p&gt;如果旧的时间序列以高频率被新的时间序列不断替换，那么这种状态被称为高流失率。高流失率会带来以下负面影响：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;数据库中存储的时间序列总数增加。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;倒排索引（存储在&lt;code&gt;&amp;lt;storageDataPath&amp;gt;/indexdb&lt;/code&gt;）的大小增加，因为倒排索引包含了每个标签至少有一个摄入样本的所有时间序列的条目。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;查询跨多天时变慢。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;导致高流失率的主要原因是具有频繁更改值的度量标签。以下是一些示例：&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;queryid&lt;/code&gt;，在&lt;code&gt;postgres_exporter&lt;/code&gt;中每次查询都会更改。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;code&gt;app_name&lt;/code&gt;或&lt;code&gt;deployment_id&lt;/code&gt;，在Kubernetes中每次部署都会更改。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;从当前时间派生出来的标签，例如&lt;code&gt;timestamp&lt;/code&gt;、&lt;code&gt;minute&lt;/code&gt;或&lt;code&gt;hour&lt;/code&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;经常更改的&lt;code&gt;hash&lt;/code&gt;或&lt;code&gt;uuid&lt;/code&gt;标签。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;解决高流失率问题需要识别和消除具有频繁更改值的标签。Cardinality explorer可以帮助确定这些标签。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是高基数&#34;&gt;什么是高基数&lt;/h2&gt;&#xA;&lt;p&gt;高基数通常意味着&lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/faq#what-is-an-active-time-series&#34;&gt;活跃时间序列&lt;/a&gt;的数量很多。高基数可能导致内存使用量增加和/或慢速插入的比例较高。高基数的来源通常是具有大量唯一值的标签，这些标签占了被摄取时间序列的很大比例。解决方案是通过基数探索器来识别和移除高基数的来源。&lt;/p&gt;&#xA;&lt;h2 id=&#34;什么是慢写入&#34;&gt;什么是慢写入&lt;/h2&gt;&#xA;&lt;p&gt;VictoriaMetrics在内存中维护了一个缓存，用于将&lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/faq#what-is-an-active-time-series&#34;&gt;活跃时间序列&lt;/a&gt;映射为内部系列ID。缓存的大小取决于主机系统中可用的VictoriaMetrics内存。如果所有活跃时间序列的信息无法适应缓存，则VictoriaMetrics需要在每个进入样本时从磁盘上读取和解压缩不在缓存中的时间序列信息。这个操作比缓存查找要慢得多，因此这种插入被称为&lt;code&gt;慢写入&lt;/code&gt;。官方仪表板上出现大量慢写入表示当前活跃时间序列数量存在内存不足问题。这种情况通常会导致数据摄取严重减慢，并显著增加磁盘IO和CPU使用率。解决方法是增加更多内存或减少活跃时间序列的数量。Cardinality Explorer可以帮助定位高数量活跃时间序列的来源。&lt;/p&gt;&#xA;&lt;h2 id=&#34;如何限制-victoriametrics-组件的内存&#34;&gt;如何限制 VictoriaMetrics 组件的内存&lt;/h2&gt;&#xA;&lt;p&gt;所有的VictoriaMetrics组件都提供了命令行参数来控制内部缓冲区和缓存的大小：&lt;code&gt;-memory.allowedPercent&lt;/code&gt; 和 &lt;code&gt;-memory.allowedBytes&lt;/code&gt;（在任何一个VictoriaMetrics组件中使用&lt;code&gt;-help &lt;/code&gt;查看这些参数的描述）。这些限制不考虑可能需要用于处理传入查询的额外内存。硬限制只能通过操作系统通过&lt;a href=&#34;https://en.wikipedia.org/wiki/Cgroups&#34;&gt;cgroups&lt;/a&gt;、&lt;a href=&#34;https://docs.docker.com/config/containers/resource_constraints&#34;&gt;Docker&lt;/a&gt;或&lt;a href=&#34;https://kubernetes.io/docs/concepts/configuration/manage-resources-containers&#34;&gt;Kubernetes&lt;/a&gt;来强制执行。&lt;/p&gt;&#xA;&lt;p&gt;根据以下文档，可以调整VictoriaMetrics组件的内存使用情况：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/#resource-usage-limits&#34;&gt;Resource usage limits for single-node VictoriaMetrics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/Cluster-VictoriaMetrics.html#resource-usage-limits&#34;&gt;Resource usage limits for cluster VictoriaMetrics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/vmagent.html#troubleshooting&#34;&gt;Troubleshooting for vmagent&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://docs.victoriametrics.com/#troubleshooting&#34;&gt;Troubleshooting for single-node VictoriaMetrics&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;如何删除数据&#34;&gt;如何删除数据&lt;/h2&gt;&#xA;&lt;p&gt;请阅读 &lt;a href=&#34;https://www.victoriametrics.com.cn/victoriametrics/dan-ji-ban-ben#ru-he-shan-chu-timeseries&#34;&gt;如何删除 Timeseries&lt;/a&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
